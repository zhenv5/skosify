# Skosify configuration file for transforming most FinnONTO ontologies into SKOS
#
# Can be used e.g. with the Finnish General Purpose Upper Ontology:
# ./skosify.py ysoJulkaisuversio.owl -c finnonto.cfg -o yso-skos.ttl
# (download the source vocabulary from ONKI first: http://onki.fi/en/browser/ )

# runtime options which correspond to command line parameters
[options]
narrower=True
transitive=False
enrich_mappings=False
aggregates=True
debug=False
break_cycles=True
cleanup_properties=True
cleanup_classes=True
cleanup_unreachable=True

# define custom RDF namespaces that can then be used in the mappings below (and will also be used in the output file)
# Note that common namespaces are already defined: rdf, rdfs, owl, skos, dc, dct
[namespaces]
# YSO concept namespace
yso=http://www.yso.fi/onto/yso/
# YSO metaschema namespace
ysometa=http://www.yso.fi/onto/yso-meta/2007-03-02/
# FinnONTO SKOS Extensions namespace
skosext=http://purl.org/finnonto/schema/skosext#
# YSO translation namespace
ysotranslate=http://www.yso.fi/onto/yso-translate/
# YSO update namespace
ysoupdate=http://www.yso.fi/onto/yso-update/
# YSO-kehitys namespace
ysokehitys=http://www.yso.fi/onto/yso-kehitys/
# ISO 25964 SKOS extensions
isothes=http://purl.org/iso25964/skos-thes#

# Domain ontology specific namespaces
afometa=http://www.yso.fi/onto/afo-meta/
maometa=http://www.yso.fi/onto/mao-meta/
taometa=http://www.yso.fi/onto/tao-meta/
kauno=http://www.yso.fi/onto/kauno/
kaunometa=http://www.yso.fi/onto/kauno-meta/
valometa=http://www.yso.fi/onto/valo-meta/
kulometa=http://www.yso.fi/onto/kulo-meta/
ktometa=http://www.yso.fi/onto/kto-meta/
kitometa=http://www.yso.fi/onto/kito-meta/
puhometa=http://www.yso.fi/onto/puho-meta/
juhometa=http://www.yso.fi/onto/juho-meta/
jupometa=http://www.yso.fi/onto/jupo-meta/
merometa=http://www.yso.fi/onto/mero-meta/
liitometa=http://www.yso.fi/onto/liito-meta/
musometa=http://www.yso.fi/onto/muso-meta/
tsrmeta=http://www.yso.fi/onto/tsr-meta/

# define what to do with types in the source vocabulary, i.e. how these map to SKOS constructs
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the instances)
# the <key> instances will be replaced with <value> instances.
# key may start with * which matches any localname prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[types]
Concept=skos:Concept
AggregateConcept=skos:Concept
DeprecatedConcept=skosext:DeprecatedConcept
DeprecatedAggregateConcept=skosext:DeprecatedConcept
AFOConcept=afometa:Concept,skos:Concept
MaoConcept=maometa:Concept,skos:Concept
taoConcept=taometa:Concept,skos:Concept
kauno.Concept=kaunometa:Concept,skos:Concept
VAOconcept=valometa:Concept,skos:Concept
KuloConcept=kulometa:Concept,skos:Concept
ktometa.Concept=ktometa:Concept,skos:Concept
KitoConcept=kitometa:Concept,skos:Concept
puhometa.Concept=puhometa:Concept,skos:Concept
juhometa.Concept=juhometa:Concept,skos:Concept
jupometa.Concept=jupometa:Concept,skos:Concept
MeroConcept=merometa:Concept,skos:Concept
liitometa.Concept=liitometa:Concept,skos:Concept
musometa.Concept=musometa:Concept,skos:Concept
tsrmeta.Concept=tsrmeta:Concept,skos:Concept
*Concept=skos:Concept
*concept=skos:Concept
SUOPlace=skos:Concept
GNSPlace=skos:Concept
GroupConcept=isothes:ThesaurusArray,skos:Collection
*GroupConcept=isothes:ThesaurusArray,skos:Collection
*groupConcept=isothes:ThesaurusArray,skos:Collection
StructuringClass=
# YSO,JUHO thematic groups
ThematicGroup=isothes:ConceptGroup,skos:Collection

# define what to do with literal properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[literals]
ysometa.prefLabel=skosext:candidateLabel
prefLabel=skos:prefLabel
# at least TAO and VALO use rdfs:label
rdfs.label=skos:prefLabel
# AFO uses "ctx"
ctx=skos:prefLabel
altLabel=skos:altLabel
oldLabel=skos:altLabel
# AFO uses "fte" for English labels (may be more than 1, thus altLabel)
fte=skos:altLabel
# AFO uses "agx" for English Agrovoc label
agx=skos:altLabel
hiddenLabel=skos:hiddenLabel
note=skos:note
editorialNote=skos:scopeNote
comment=skos:scopeNote
ysaComment=skos:scopeNote
description=skos:scopeNote
tempLabel=
semanticTag=
semanticSvTag=
semTag=
semSvTag=
overlaps=
overlappedBy=
overlapsDefinition=
overlappedByDefinition=
ysaSource=dc:source
ysoSource=dc:source
allsoSource=dc:source
source=dc:source
eiYsa=
order=
creator=dc:creator
date=dc:date
definition=skos:definition
deprecatedLabel=skos:hiddenLabel
# PUHO garbage
protegeLabelFi=
protegeLabelSv=
UILabel-fi=
# YSO development properties
ysometa.aafAllsoSource=dc:source
ysometa.aaaOldLabel=skos:altLabel
ysometa.aaaOldLabel_EN=skos:altLabel
ysometa.aaaOldLabel_SV=skos:altLabel
ysometa.aadYsaComment=skos:scopeNote
ysometa.aadYsaComment_EN=skos:scopeNote
ysometa.aadYsaComment_SV=skos:scopeNote
ysometa.aaeYsaSource=dc:source
ysometa.aagYsoSource=dc:source
# Deleting development comments
ysometa.developmentComment=
# Deleting YSO update properties
ysoupdate.aajOngelmallinen_associativeRelation=
ysoupdate.aaiOngelmallinen_subClassOf=
ysoupdate.aacPoistunutOldLabel=
ysoupdate.aacPoistunutOldLabel_SV=
ysoupdate.aacPoistunutOldLabel_EN=
ysoupdate.aaaPoistunutPrefLabel=
ysoupdate.aaaPoistunutPrefLabel_SV=
ysoupdate.aaaPoistunutPrefLabel_EN=
ysoupdate.aadUusiOldLabel=
ysoupdate.aadUusiOldLabel_SV=
ysoupdate.aadUusiOldLabel_EN=
ysoupdate.aabUusiPrefLabel=
ysoupdate.aabUusiPrefLabel_SV=
ysoupdate.aabUusiPrefLabel_EN=
ysoupdate.ongelmallinenSuhde=
# delete YSO-kehitys properties (JUHO)
ysokehitys.uusiPrefLabel=
ysokehitys.uusiOldLabel=
ysokehitys.poistunutPrefLabel=
ysokehitys.poistunutOldLabel=
# JUHO specific
hasAsiasanalaji=dc:subject
hasLahde=dc:source
hasPaivitetty=dc:modified
hasSelite=skos:scopeNote
# JUPO specific
jupometa.subject=
jupometa.associativeLabel=
# YSO/TBC language specific properties
skos.prefLabel_EN=skos:prefLabel
skos.prefLabel_SV=skos:prefLabel
skos.altLabel_EN=skos:altLabel
skos.altLabel_SV=skos:altLabel
rdfs.comment_EN=rdfs:comment
rdfs.comment_SV=rdfs:comment


# define what to do with relation properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[relations]
rdfs.subClassOf=skos:broader
owl.equivalentClass=skos:exactMatch
definedConcept=skos:closeMatch
partOf=skosext:partOf
broaderGeneric=skosext:broaderGeneric
broaderPartitive=skosext:broaderPartitive
exactMatch=skos:exactMatch
closeMatch=skos:closeMatch
related=skos:related
associativeRelation=skos:related
uusiAssociativeRelation=skos:related
deprecatedSubClassOf=skos:broadMatch
deprecatedSuperClassOf=
deprecatedAssociativeRelation=skos:relatedMatch
deprecatedReplacedBy=dct:isReplacedBy
# TAO uses these:
RT=skos:related
LT=
ST=
KÄYTÄ=
# MAO uses these:
narrower_term=
broader_term=
# VALO uses this:
actuality=skos:related
# YSO development properties
ysometa.aabAssociativeRelation=skos:related
ysometa.aacPartOf=skosext:partOf
ysometa.aafAllsoSource=ysometa.allsoSource
ysometa.aaaOldLabel=ysometa.oldLabel
ysometa.aadYsaComment=ysometa.ysaComment
ysometa.aaeYsaSource=ysometa.ysaSource
ysometa.aagYsoSource=ysometa.ysoSource
ysotranslate.hasStatus=

# Deleting YSO update properties
ysoupdate.aagPoistunutAssociativeRelation=
ysoupdate.aaePoistunutSubClassOfSuhde=
ysoupdate.aahUusiAssociativeRelation=
ysoupdate.aafUusiSubClassOfSuhde=

# group membership property - represent with inverse skos:member relation
hasThematicGroup=^skos:member
