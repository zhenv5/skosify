# Skosify configuration file for transforming most FinnONTO ontologies into SKOS
#
# Can be used e.g. with the Finnish General Purpose Upper Ontology:
# ./skosify.py ysoJulkaisuversio.owl -c finnonto.cfg -o yso-skos.ttl
# (download the source vocabulary from ONKI first: http://onki.fi/en/browser/ )

# runtime options which correspond to command line parameters
[options]
narrower=False
transitive=False
remove_aggregates=False
debug=False

# define custom RDF namespaces that can then be used in the mappings below (and will also be used in the output file)
# Note that common namespaces are already defined: rdf, rdfs, owl, skos, dc, dct
[namespaces]
# FinnONTO SKOS Extensions namespace
skosext=http://purl.org/finnonto/schema/skosext#


# define what to do with types in the source vocabulary, i.e. how these map to SKOS constructs
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the instances)
# the <key> instances will be replaced with <value> instances.
# key may start with * which matches any localname prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[types]
rdfs.Class=skos:Concept
Concept=skos:Concept
AggregateConcept=skos:Concept
*Concept=skos:Concept
*concept=skos:Concept
SUOPlace=skos:Concept
GNSPlace=skos:Concept
GroupConcept=skos:Collection
*GroupConcept=skos:Collection
*groupConcept=skos:Collection
StructuringClass=


# define what to do with literal properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[literals]
prefLabel=skos:prefLabel
rdfs.label=skos:prefLabel	; TAO and VALO use this
ctx=skos:prefLabel	; AFO uses this
altLabel=skos:altLabel
oldLabel=skos:altLabel
fte=skos:altLabel	; AFO uses this for English labels (may be more than 1)
agx=skos:altLabel	; AFO uses this for English Agrovoc label
hiddenLabel=skos:hiddenLabel
note=skos:note
editorialNote=skos:note
comment=skos:note
ysaComment=skos:note
description=skos:note	; MAO uses this
tempLabel=		; old YSO uses this
semanticTag=
semanticSvTag=
semTag=
semSvTag=
overlaps=
overlappedBy=
overlapsDefinition=
overlappedByDefinition=
ysaSource=dc:source
ysoSource=dc:source
allsoSource=dc:source
source=dc:source	; VALO uses this
eiYsa=
order=
creator=dc:creator	; MAO uses this
date=dc:date		; MAO uses this


# define what to do with relation properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[relations]
rdfs.subClassOf=skosext:broaderGeneric
owl.equivalentClass=skos:exactMatch
definedConcept=skos:exactMatch
partOf=skosext:broaderPartitive
broaderGeneric=skosext:broaderGeneric
broaderPartitive=skosext:broaderPartitive
exactMatch=skosext:exactMatch
related=skos:related
associativeRelation=skos:related
uusiAssociativeRelation=skos:related
RT=skos:related		; TAO uses this
LT=			; TAO uses this
ST=			; TAO uses this
KÄYTÄ=			; TAO uses this
narrower_term=		; MAO uses this
broader_term=		; MAO uses this
actuality=skos:related	; VALO uses this
